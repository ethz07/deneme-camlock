local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==1) then function v32(v43,v44,v45) if v45 then local v83=0;local v84;while true do if (v83==0) then v84=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v84-(v84%(2 -1)) ;end end else local v85=0;local v86;while true do if (v85==0) then v86=2^(v44-1) ;return (((v43%(v86 + v86))>=v86) and 1) or 0 ;end end end end v33=nil;function v33() local v46=0;local v47;while true do if (v46==1) then return v47;end if (0==v46) then v47=v9(v27,v30,v30);v30=v30 + 1 ;v46=1;end end end v34=nil;v29=2;end if (v29==4) then v39=nil;function v39(...) return {...},v20("#",...);end v40=nil;function v40() local v48=0;local v49;local v50;local v51;local v52;local v53;local v54;while true do if (v48==3) then for v95=1,v35() do v50[v95-1 ]=v40();end return v52;end if (v48==1) then v52={v49,v50,nil,v51};v53=v35();v54={};v48=2;end if (0==v48) then v49={};v50={};v51={};v48=1;end if (v48==2) then for v97=1,v53 do local v98=0;local v99;local v100;while true do if (v98==1) then if (v99==1) then v100=v33()~=0 ;elseif (v99==2) then v100=v36();elseif (v99==3) then v100=v37();end v54[v97]=v100;break;end if (v98==0) then v99=v33();v100=nil;v98=1;end end end v52[3]=v33();for v101=878 -(282 + 595) ,v35() 
